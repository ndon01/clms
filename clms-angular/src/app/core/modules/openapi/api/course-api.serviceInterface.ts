/**
 * OpenAPI definition
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Assignment } from '../model/models';
import { AssignmentDetailsProjection } from '../model/models';
import { Course } from '../model/models';
import { CourseCreationDto } from '../model/models';
import { CourseDetailsProjection } from '../model/models';
import { User } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface CourseAPIServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param courseId 
     * @param requestBody 
     */
    addMembers(courseId: number, requestBody: Array<number>, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param courseId 
     * @param assignment 
     */
    createAssignment(courseId: number, assignment: Assignment, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param courseCreationDto 
     */
    createCourse(courseCreationDto: CourseCreationDto, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param courseId 
     */
    deleteCourse(courseId: number, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param courseId 
     */
    getCourseAssignments(courseId: number, extraHttpRequestParams?: any): Observable<Array<Assignment>>;

    /**
     * 
     * 
     * @param courseId 
     */
    getCourseAssignments2(courseId: number, extraHttpRequestParams?: any): Observable<Array<AssignmentDetailsProjection>>;

    /**
     * 
     * 
     * @param assignmentId 
     */
    getCourseFromAssignment(assignmentId: number, extraHttpRequestParams?: any): Observable<Course>;

    /**
     * 
     * 
     * @param courseId 
     */
    getCourseMembers(courseId: number, extraHttpRequestParams?: any): Observable<Array<User>>;

    /**
     * 
     * 
     */
    getCourses(extraHttpRequestParams?: any): Observable<Array<CourseDetailsProjection>>;

    /**
     * 
     * 
     * @param user 
     */
    getMyCourses(user: User, extraHttpRequestParams?: any): Observable<Array<CourseDetailsProjection>>;

    /**
     * 
     * 
     * @param courseId 
     * @param requestBody 
     */
    removeMembers(courseId: number, requestBody: Array<number>, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param courseId 
     * @param name 
     */
    updateCourse(courseId: number, name?: string, extraHttpRequestParams?: any): Observable<object>;

}
