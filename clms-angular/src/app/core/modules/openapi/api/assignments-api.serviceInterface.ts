/**
 * OpenAPI definition
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { Assignment } from '../model/models';
import { AssignmentAttemptProjection } from '../model/models';
import { AssignmentDetailsProjection } from '../model/models';
import { AssignmentEditDetailsProjection } from '../model/models';
import { AssignmentProjection } from '../model/models';
import { AssignmentQuestion } from '../model/models';
import { AssignmentQuestionRequest } from '../model/models';
import { AssignmentQuestionUpdateRequest } from '../model/models';
import { StartAssignmentAttemptRequest } from '../model/models';
import { SubmitAssignmentAttemptRequest } from '../model/models';
import { User } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface AssignmentsAPIServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param assignmentQuestionRequest 
     */
    bulkUpdateQuestions(assignmentQuestionRequest: Array<AssignmentQuestionRequest>, extraHttpRequestParams?: any): Observable<Array<AssignmentQuestion>>;

    /**
     * 
     * 
     * @param assignment 
     */
    createAssignment1(assignment: Assignment, extraHttpRequestParams?: any): Observable<Assignment>;

    /**
     * 
     * 
     * @param assignmentQuestionRequest 
     */
    createQuestion(assignmentQuestionRequest: AssignmentQuestionRequest, extraHttpRequestParams?: any): Observable<AssignmentQuestion>;

    /**
     * 
     * 
     * @param id 
     */
    deleteAssignment(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param id 
     */
    deleteQuestion(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param fileId 
     */
    downloadFile(fileId: string, extraHttpRequestParams?: any): Observable<Blob>;

    /**
     * 
     * 
     */
    getAllAssignments(extraHttpRequestParams?: any): Observable<Array<AssignmentDetailsProjection>>;

    /**
     * 
     * 
     */
    getAllQuestions(extraHttpRequestParams?: any): Observable<Array<AssignmentQuestion>>;

    /**
     * 
     * 
     * @param user 
     * @param assignmentId 
     */
    getAssignmentAttempt(user: User, assignmentId: number, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param user 
     * @param assignmentId 
     */
    getAssignmentAttemptAnswers(user: User, assignmentId: number, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param user 
     * @param assignmentId 
     */
    getAssignmentAttemptsForUserById(user: User, assignmentId: number, extraHttpRequestParams?: any): Observable<Array<AssignmentAttemptProjection>>;

    /**
     * 
     * 
     * @param id 
     */
    getAssignmentById(id: number, extraHttpRequestParams?: any): Observable<AssignmentDetailsProjection>;

    /**
     * 
     * 
     * @param assignmentId 
     */
    getAssignmentDetails(assignmentId: number, extraHttpRequestParams?: any): Observable<AssignmentDetailsProjection>;

    /**
     * 
     * 
     * @param assignmentId 
     */
    getAssignmentEditDetails(assignmentId: number, extraHttpRequestParams?: any): Observable<AssignmentEditDetailsProjection>;

    /**
     * 
     * 
     * @param id 
     */
    getAssignmentForAttemptById(id: number, extraHttpRequestParams?: any): Observable<AssignmentProjection>;

    /**
     * 
     * 
     * @param id 
     */
    getQuestionById(id: number, extraHttpRequestParams?: any): Observable<AssignmentQuestion>;

    /**
     * 
     * 
     * @param user 
     * @param startAssignmentAttemptRequest 
     */
    startAttempt(user: User, startAssignmentAttemptRequest: StartAssignmentAttemptRequest, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param user 
     * @param submitAssignmentAttemptRequest 
     */
    submitCurrentAttempt(user: User, submitAssignmentAttemptRequest: SubmitAssignmentAttemptRequest, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param id 
     * @param assignment 
     */
    updateAssignment(id: number, assignment: Assignment, extraHttpRequestParams?: any): Observable<Assignment>;

    /**
     * 
     * 
     * @param id 
     * @param assignmentQuestionRequest 
     */
    updateQuestion(id: number, assignmentQuestionRequest: AssignmentQuestionRequest, extraHttpRequestParams?: any): Observable<AssignmentQuestion>;

    /**
     * 
     * 
     * @param user 
     * @param assignmentQuestionUpdateRequest 
     */
    updateQuestionAnswer(user: User, assignmentQuestionUpdateRequest: AssignmentQuestionUpdateRequest, extraHttpRequestParams?: any): Observable<object>;

    /**
     * 
     * 
     * @param id 
     * @param file 
     */
    uploadFile(id: number, file: Blob, extraHttpRequestParams?: any): Observable<object>;

}
